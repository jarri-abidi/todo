apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo
  labels:
    app: todo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: todo
  template:
    metadata:
      labels:
        app: todo
    spec:
      containers:
        - name: todo
          image: markhaur/todo:latest
          env:
            - name: TODOAPP_SERVER_ADDRESS
              value: "0.0.0.0:8085"
            - name: TODOAPP_SERVER_WRITE_TIMEOUT
              value: "15s"
            - name: TODOAPP_SERVER_READ_TIMEOUT
              value: "15s"
            - name: TODOAPP_SERVER_IDLE_TIMEOUT
              value: "60s"
            - name: TODOAPP_GRACEFUL_SHUTDOWN_TIMEOUT
              value: "30s"
            - name: TODOAPP_DB_SOURCE
              value: "postgresql://root:secret@192.168.27.129:31022/todo?sslmode=disable"
            - name: TODOAPP_DB_CONNECT_TIMEOUT
              value: "5s"
            - name: TODOAPP_OTEL_EXPORTER_JAEGER_ENDPOINT
              value: "http://jaeger:14268/api/traces"
          ports:
            - containerPort: 8085

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: todo
          image: postgres:14-alpine
          env:
            - name: POSTGRES_USER
              value: "root"
            - name: POSTGRES_PASSWORD
              value: "secret"
            - name: POSTGRES_DB
              value: "todo"
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-volume
      volumes:
        - name: postgres-volume
          hostPath:
            path: /home/markhaur/todo/postgres 
            type: Directory

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: todo
  name: todo
spec:
  selector:
    app: todo
  ports:
    - name: default
      protocol: TCP
      port: 80
      targetPort: 8085

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 31022
      protocol: TCP
  selector:
    app: postgres
